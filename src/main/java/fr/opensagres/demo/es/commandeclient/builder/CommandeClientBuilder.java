// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package fr.opensagres.demo.es.commandeclient.builder;

import fr.opensagres.demo.es.commandeclient.Client;
import fr.opensagres.demo.es.commandeclient.CommandeClient;
import fr.opensagres.demo.es.commandeclient.LigneCommande;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommandeClientBuilder
    extends CommandeClientBuilderBase<CommandeClientBuilder>
{
    public static CommandeClientBuilder commandeClient()
    {
        return new CommandeClientBuilder();
    }

    public CommandeClientBuilder()
    {
        super( new CommandeClient() );
    }

    public CommandeClient build()
    {
        return getInstance();
    }
}

class CommandeClientBuilderBase<GeneratorT extends CommandeClientBuilderBase<GeneratorT>>
{
    private CommandeClient instance;

    protected CommandeClientBuilderBase( CommandeClient aInstance )
    {
        instance = aInstance;
    }

    protected CommandeClient getInstance()
    {
        return instance;
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withNumeroCommande( String aValue )
    {
        instance.setNumeroCommande( aValue );

        return (GeneratorT) this;
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withType( String aValue )
    {
        instance.setType( aValue );

        return (GeneratorT) this;
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withClient( Client aValue )
    {
        instance.setClient( aValue );

        return (GeneratorT) this;
    }

    public ClientClientBuilder withClient()
    {
        Client obj = new Client();

        withClient( obj );

        return new ClientClientBuilder( obj );
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withLignesCommande( List<LigneCommande> aValue )
    {
        instance.setLignesCommande( aValue );

        return (GeneratorT) this;
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withAddedLignesCommandeElement( LigneCommande aValue )
    {
        if ( instance.getLignesCommande() == null )
        {
            instance.setLignesCommande( new ArrayList<LigneCommande>() );
        }

        ( (ArrayList<LigneCommande>) instance.getLignesCommande() ).add( aValue );

        return (GeneratorT) this;
    }

    public AddedLignesCommandeElementLigneCommandeBuilder withAddedLignesCommandeElement()
    {
        LigneCommande obj = new LigneCommande();

        withAddedLignesCommandeElement( obj );

        return new AddedLignesCommandeElementLigneCommandeBuilder( obj );
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withDateCreation( Date aValue )
    {
        instance.setDateCreation( aValue );

        return (GeneratorT) this;
    }

    @SuppressWarnings( "unchecked" )
    public GeneratorT withDateModification( Date aValue )
    {
        instance.setDateModification( aValue );

        return (GeneratorT) this;
    }

    public class ClientClientBuilder
        extends ClientBuilderBase<ClientClientBuilder>
    {
        public ClientClientBuilder( Client aInstance )
        {
            super( aInstance );
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT endClient()
        {
            return (GeneratorT) CommandeClientBuilderBase.this;
        }
    }

    public class AddedLignesCommandeElementLigneCommandeBuilder
        extends LigneCommandeBuilderBase<AddedLignesCommandeElementLigneCommandeBuilder>
    {
        public AddedLignesCommandeElementLigneCommandeBuilder( LigneCommande aInstance )
        {
            super( aInstance );
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT endLignesCommandeElement()
        {
            return (GeneratorT) CommandeClientBuilderBase.this;
        }
    }

    public static class ClientBuilderBase<GeneratorT extends ClientBuilderBase<GeneratorT>>
    {
        private Client instance;

        protected ClientBuilderBase( Client aInstance )
        {
            instance = aInstance;
        }

        protected Client getInstance()
        {
            return instance;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withNumeroClient( String aValue )
        {
            instance.setNumeroClient( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withPrenom( String aValue )
        {
            instance.setPrenom( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withNom( String aValue )
        {
            instance.setNom( aValue );

            return (GeneratorT) this;
        }
    }

    public static class LigneCommandeBuilderBase<GeneratorT extends LigneCommandeBuilderBase<GeneratorT>>
    {
        private LigneCommande instance;

        protected LigneCommandeBuilderBase( LigneCommande aInstance )
        {
            instance = aInstance;
        }

        protected LigneCommande getInstance()
        {
            return instance;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withNumeroLigne( Integer aValue )
        {
            instance.setNumeroLigne( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withCommande( CommandeClient aValue )
        {
            instance.setCommande( aValue );

            return (GeneratorT) this;
        }

        public CommandeCommandeClientBuilder withCommande()
        {
            CommandeClient obj = new CommandeClient();

            withCommande( obj );

            return new CommandeCommandeClientBuilder( obj );
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withCodeArticle( String aValue )
        {
            instance.setCodeArticle( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withLibelleArticle( String aValue )
        {
            instance.setLibelleArticle( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withQuantite( BigDecimal aValue )
        {
            instance.setQuantite( aValue );

            return (GeneratorT) this;
        }

        @SuppressWarnings( "unchecked" )
        public GeneratorT withPrixUnitaire( BigDecimal aValue )
        {
            instance.setPrixUnitaire( aValue );

            return (GeneratorT) this;
        }

        public class CommandeCommandeClientBuilder
            extends CommandeClientBuilderBase<CommandeCommandeClientBuilder>
        {
            public CommandeCommandeClientBuilder( CommandeClient aInstance )
            {
                super( aInstance );
            }

            @SuppressWarnings( "unchecked" )
            public GeneratorT endCommande()
            {
                return (GeneratorT) LigneCommandeBuilderBase.this;
            }
        }
    }
}
